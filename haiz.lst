CCS PCM C Compiler, Version 4.074, 22034               28-Apr-22 22:03

               Filename: haiz.lst

               ROM used: 729 words (9%)
                         Largest free fragment is 2048
               RAM used: 11 (3%) at main() level
                         36 (10%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   23D
0003:  NOP
.................... //#include "D:\Proteus 8.8\pic16f887\final-test\haiz.h" 
....................  
....................  
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #device ADC = 10 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP                        
.................... #use delay(clock = 8MHz) 
0227:  MOVLW  25
0228:  MOVWF  04
0229:  BCF    03.7
022A:  MOVF   00,W
022B:  BTFSC  03.2
022C:  GOTO   23A
022D:  MOVLW  02
022E:  MOVWF  78
022F:  CLRF   77
0230:  DECFSZ 77,F
0231:  GOTO   230
0232:  DECFSZ 78,F
0233:  GOTO   22F
0234:  MOVLW  97
0235:  MOVWF  77
0236:  DECFSZ 77,F
0237:  GOTO   236
0238:  DECFSZ 00,F
0239:  GOTO   22D
023A:  BCF    0A.3
023B:  BCF    0A.4
023C:  GOTO   2D5 (RETURN)
.................... #use rs232(UART1, baud = 9600) 
.................... //#use fast_io(D) 
.................... //#define DHT11_PIN PIN_D4   
.................... float pot; 
.................... void main() 
.................... { 
023D:  CLRF   04
023E:  BCF    03.7
023F:  MOVLW  1F
0240:  ANDWF  03,F
0241:  BSF    03.5
0242:  BSF    03.6
0243:  BCF    07.3
0244:  MOVLW  0C
0245:  BCF    03.6
0246:  MOVWF  19
0247:  MOVLW  A2
0248:  MOVWF  18
0249:  MOVLW  90
024A:  BCF    03.5
024B:  MOVWF  18
024C:  BSF    03.5
024D:  BSF    03.6
024E:  MOVF   09,W
024F:  ANDLW  C0
0250:  MOVWF  09
0251:  BCF    03.6
0252:  BCF    1F.4
0253:  BCF    1F.5
0254:  MOVLW  00
0255:  BSF    03.6
0256:  MOVWF  08
0257:  BCF    03.5
0258:  CLRF   07
0259:  CLRF   08
025A:  CLRF   09
....................   set_tris_a(0xFF); 
025B:  MOVLW  FF
025C:  BSF    03.5
025D:  BCF    03.6
025E:  MOVWF  05
....................  //set_tris_b(0x00); 
....................  //set_tris_c(0x00); 
....................   setup_oscillator(OSC_8MHZ);                    // Set the internal oscillator to 8MHz 
025F:  MOVLW  71
0260:  MOVWF  0F
0261:  MOVF   0F,W
....................   setup_adc(ADC_CLOCK_INTERNAL);                 // ADC Module uses its internal oscillator 
0262:  BCF    03.5
0263:  BSF    1F.6
0264:  BSF    1F.7
0265:  BSF    03.5
0266:  BSF    1F.7
0267:  BCF    03.5
0268:  BSF    1F.0
....................   setup_adc_ports(sAN0);                         // Configure AN0 pin as analog 
0269:  BSF    03.5
026A:  BSF    03.6
026B:  MOVF   09,W
026C:  ANDLW  C0
026D:  MOVWF  09
026E:  BCF    03.6
026F:  BCF    1F.4
0270:  BCF    1F.5
0271:  MOVLW  01
0272:  BSF    03.6
0273:  MOVWF  08
....................   set_adc_channel(0);   
0274:  MOVLW  00
0275:  MOVWF  78
0276:  BCF    03.5
0277:  BCF    03.6
0278:  MOVF   1F,W
0279:  ANDLW  C3
027A:  IORWF  78,W
027B:  MOVWF  1F
....................   printf("CLEARDATA\r\n");                             // Clear all Excel sheet data 
027C:  CLRF   24
027D:  MOVF   24,W
027E:  CALL   004
027F:  INCF   24,F
0280:  MOVWF  77
0281:  MOVF   77,W
0282:  BTFSS  0C.4
0283:  GOTO   282
0284:  MOVWF  19
0285:  MOVLW  0B
0286:  SUBWF  24,W
0287:  BTFSS  03.2
0288:  GOTO   27D
....................   // Label columns: A for date, B for time, C for temperature and D for humidity 
....................   printf("LABEL, Time, Started Time, Date, Analog Value\r\n"); 
0289:  CLRF   24
028A:  MOVF   24,W
028B:  CALL   014
028C:  INCF   24,F
028D:  MOVWF  77
028E:  MOVF   77,W
028F:  BTFSS  0C.4
0290:  GOTO   28F
0291:  MOVWF  19
0292:  MOVLW  2F
0293:  SUBWF  24,W
0294:  BTFSS  03.2
0295:  GOTO   28A
....................   
....................   while(TRUE) { 
....................     pot = read_adc(); 
0296:  BSF    1F.1
0297:  BTFSC  1F.1
0298:  GOTO   297
0299:  MOVF   1E,W
029A:  MOVWF  7A
029B:  BSF    03.5
029C:  MOVF   1E,W
029D:  BCF    03.5
029E:  MOVWF  24
029F:  MOVF   1E,W
02A0:  MOVWF  25
02A1:  GOTO   066
02A2:  MOVF   7A,W
02A3:  MOVWF  23
02A4:  MOVF   79,W
02A5:  MOVWF  22
02A6:  MOVF   78,W
02A7:  MOVWF  21
02A8:  MOVF   77,W
02A9:  MOVWF  20
....................     printf("DATA, TIME, TIMER, DATE, ");                         // Write date and time on row A and row B respectively 
02AA:  CLRF   24
02AB:  MOVF   24,W
02AC:  CALL   048
02AD:  INCF   24,F
02AE:  MOVWF  77
02AF:  MOVF   77,W
02B0:  BTFSS  0C.4
02B1:  GOTO   2B0
02B2:  MOVWF  19
02B3:  MOVLW  19
02B4:  SUBWF  24,W
02B5:  BTFSS  03.2
02B6:  GOTO   2AB
....................      
....................     printf("%f \r\n",pot); 
02B7:  MOVLW  89
02B8:  MOVWF  04
02B9:  MOVF   23,W
02BA:  MOVWF  27
02BB:  MOVF   22,W
02BC:  MOVWF  26
02BD:  MOVF   21,W
02BE:  MOVWF  25
02BF:  MOVF   20,W
02C0:  MOVWF  24
02C1:  MOVLW  02
02C2:  MOVWF  28
02C3:  GOTO   0C7
02C4:  MOVLW  20
02C5:  BTFSS  0C.4
02C6:  GOTO   2C5
02C7:  MOVWF  19
02C8:  MOVLW  0D
02C9:  BTFSS  0C.4
02CA:  GOTO   2C9
02CB:  MOVWF  19
02CC:  MOVLW  0A
02CD:  BTFSS  0C.4
02CE:  GOTO   2CD
02CF:  MOVWF  19
....................     delay_ms(1000); 
02D0:  MOVLW  04
02D1:  MOVWF  24
02D2:  MOVLW  FA
02D3:  MOVWF  25
02D4:  GOTO   227
02D5:  DECFSZ 24,F
02D6:  GOTO   2D2
.................... } 
02D7:  GOTO   296
.................... } 
02D8:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
